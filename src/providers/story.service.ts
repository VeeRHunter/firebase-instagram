import { Injectable } from '@angular/core';
import { LoadingProvider } from './loading';
import { AlertProvider } from './alert';
import { DataProvider } from './data';
import { AngularFireDatabase } from 'angularfire2/database';
import * as firebase from 'firebase';

@Injectable()
export class StoryService {

  feeds;

  constructor(
    public loadingProvider: LoadingProvider,
    public alertProvider: AlertProvider,
    private dataProvider: DataProvider,
    public angularDb: AngularFireDatabase) {

    this.feeds = [];

  }


  static buildItem(id, type, length, src, preview, link, seen, time) {
    return {
      "id": id,
      "type": type,
      "length": length,
      "src": src,
      "preview": preview,
      "link": link,
      "seen": seen,
      "time": time
    };
  }

  getFeed() {
    console.log('Gettinf Feeds', this.feeds);

    return this.feeds;
  }

  addStory(obj) {
    //first get story by array (user) then add to items the story
    //See the follow event
    //Remember, we should just show stories from current date!    
    return new Promise((resolve, reject) => {
      this.loadingProvider.show();
      const userId = firebase.auth().currentUser.uid;
      this.angularDb.list('story', {
        query: {
          orderByChild: 'storyBy',
          storyBy: userId
        }
      }).subscribe((data) => {
        console.log('story', data);
        if (data.length === 0) {
          //add story   
          console.log('userId', userId);
          console.log('OBJ', obj);

          this.angularDb.list('story').push({
            // id: "",               // story id
            storyBy: userId,
            photo: obj.userPhoto?obj.userPhoto: '',            // story photo (or user photo)
            name: obj.userName?obj.userName:'',             // story name (or user name)
            link: "",             // story link (useless on story generated by script)
            dateCreated: new Date().getDate().toString(),
            lastUpdated: new Date().toString(),      // last updated date in unix time format
            seen: false,          // set true if user has opened - if local storage is used, you don't need to care about this 

            items: [              // array of items
              // story item example
              {
                //id: "",     // item id
                type: "photo",     // photo or video
                length: 10,   // photo timeout or video length in seconds - uses 3 seconds timeout for images if not set
                src: obj.image,      // photo or video src
                preview: obj.image,  // optional - item thumbnail to show in the story carousel instead of the story defined image
                link: "",     // a link to click on story
                linkText: "", // link text
                // time: new Date().toString(),     // optional a date to display with the story item. unix timestamp are converted to "time ago" format
                seen: false   // set true if current user was read - if local storage is used, you don't need to care about this
              }
            ]
          }).then((success) => {



            this.dataProvider.getUser(userId).take(1).subscribe((account) => {

              var stories = account.stories;
              if (!stories) {
                stories = [success.key];
              } else {
                stories.push(success.key);
              }

              this.dataProvider.getUser(userId).update({
                stories: stories
              })
            });

            this.alertProvider.showToast('Add Story successfully ..');
            this.loadingProvider.hide();
            resolve(true);
            // this.navCtrl.pop();
          })

        } else {
          //Append Story
          console.log(data);
          // debugger
          const { items, $key } = data[0];
          items.push({
            type: "photo",     // photo or video
            length: 10,   // photo timeout or video length in seconds - uses 3 seconds timeout for images if not set
            src: obj.image,      // photo or video src
            preview: obj.image,  // optional - item thumbnail to show in the story carousel instead of the story defined image
            link: "",     // a link to click on story
            linkText: "", // link text
            time: new Date().toString(),     // optional a date to display with the story item. unix timestamp are converted to "time ago" format
            seen: false   // set true if current user was read - if local storage is used, you don't need to care about this
          });
          this.angularDb.object('/story/' + $key).update({
            items: items
          }).then((success) => {
            this.alertProvider.showToast('Add Story successfully ..');
            this.loadingProvider.hide();
            resolve(true);
            // this.navCtrl.pop();
          })
        }
      });
    });
  }
}
